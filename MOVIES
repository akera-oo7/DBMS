-- Creating Actor table
CREATE TABLE Actor (
    act_id INT PRIMARY KEY,
    act_name VARCHAR(255),
    act_gender VARCHAR(10)
);

-- Creating Director table
CREATE TABLE Director (
    did INT PRIMARY KEY,
    dname VARCHAR(255),
    d_phone VARCHAR(15)
);

-- Creating Movies table
CREATE TABLE Movies (
    mov_id INT PRIMARY KEY,
    mov_title VARCHAR(255),
    mov_year INT,
    did INT,
    FOREIGN KEY (did) REFERENCES Director(did)
);

-- Creating Movie_cast table
CREATE TABLE Movie_cast (
    act_id INT,
    mov_id INT,
    role VARCHAR(255),
    PRIMARY KEY (act_id, mov_id),
    FOREIGN KEY (act_id) REFERENCES Actor(act_id),
    FOREIGN KEY (mov_id) REFERENCES Movies(mov_id)
);

-- Creating Ratings table
CREATE TABLE Ratings (
    rev_id INT PRIMARY KEY,
    mov_id INT,
    rev_stars INT,
    FOREIGN KEY (mov_id) REFERENCES Movies(mov_id)
);



//queries

SELECT mov_title
FROM Movies
WHERE did = (SELECT did FROM Director WHERE dname = 'Sanjay Leela Bhansali');

SELECT DISTINCT act_name
FROM Actor
JOIN Movie_cast ON Actor.act_id = Movie_cast.act_id
JOIN Movies ON Movie_cast.mov_id = Movies.mov_id
WHERE mov_year BETWEEN 2016 AND 2018;

SELECT mov_title, rev_stars
FROM Movies
JOIN Ratings ON Movies.mov_id = Ratings.mov_id
ORDER BY rev_stars;

SELECT mov_title
FROM Movies
JOIN Movie_cast ON Movies.mov_id = Movie_cast.mov_id
GROUP BY mov_title
HAVING COUNT(DISTINCT Movie_cast.act_id) >= 2;

SELECT mov_title, MAX(rev_stars) AS highest_stars
FROM Movies
JOIN Ratings ON Movies.mov_id = Ratings.mov_id
GROUP BY mov_title
ORDER BY mov_title;

UPDATE Ratings
SET rev_stars = 5
WHERE mov_id IN (SELECT mov_id FROM Movies WHERE did = (SELECT did FROM Director WHERE dname = 'Ram Gopal Verma'));
